"use client"

import type React from "react"

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Collapsible, CollapsibleContent, CollapsibleTrigger } from "@/components/ui/collapsible"
import { Button } from "@/components/ui/button"
import { ChevronDown, HelpCircle, Shield, DollarSign, Clock, Users, AlertTriangle } from "lucide-react"
import { useState } from "react"

interface FAQItem {
  id: string
  question: string
  answer: string
  category: "general" | "staking" | "rewards" | "security" | "referrals"
  icon: React.ComponentType<{ className?: string }>
}

const faqData: FAQItem[] = [
  {
    id: "what-is-mev",
    question: "What is MEV and how does it work?",
    answer:
      "Maximum Extractable Value (MEV) refers to the profit that can be extracted from reordering, including, or excluding transactions within a block. Our MEV bots identify arbitrage opportunities, liquidations, and other profitable transactions across Solana DEXs, generating consistent returns for stakers.",
    category: "general",
    icon: HelpCircle,
  },
  {
    id: "how-staking-works",
    question: "How does MEV bot staking work?",
    answer:
      "When you stake tokens with us, your funds are deployed across our sophisticated MEV bot infrastructure. These bots continuously monitor Solana DEXs for profitable opportunities like arbitrage and liquidations. Profits are distributed daily to stakers as rewards while the principal remains locked for 90 days.",
    category: "staking",
    icon: DollarSign,
  },
  {
    id: "supported-tokens",
    question: "Which tokens can I stake?",
    answer:
      "We currently support SOL, USDC, USDT, and select meme tokens. Our MEV bots are optimized to work with these tokens across major Solana DEXs including Jupiter, Raydium, and Orca. Additional tokens may be added based on liquidity and MEV opportunities.",
    category: "staking",
    icon: DollarSign,
  },
  {
    id: "daily-rewards",
    question: "How are daily rewards calculated?",
    answer:
      "Daily rewards are based on actual MEV bot performance and typically target 1% per day. Rewards are calculated from the profits generated by our MEV operations and distributed proportionally to all stakers. Actual returns may vary based on market conditions and MEV opportunities.",
    category: "rewards",
    icon: DollarSign,
  },
  {
    id: "lock-period",
    question: "Why is there a 90-day lock period?",
    answer:
      "The 90-day lock period ensures optimal MEV capture by providing our bots with stable liquidity for larger, more profitable operations. This lock period allows us to execute complex arbitrage strategies and maintain competitive advantages in MEV extraction.",
    category: "staking",
    icon: Clock,
  },
  {
    id: "early-withdrawal",
    question: "Can I withdraw my funds early?",
    answer:
      "No, early withdrawal is not permitted during the 90-day lock period. However, you can claim your daily rewards at any time. This policy ensures the stability needed for effective MEV operations and protects all stakers' interests.",
    category: "staking",
    icon: Clock,
  },
  {
    id: "security-measures",
    question: "How secure are my funds?",
    answer:
      "We implement institutional-grade security measures including multi-signature wallets, regular security audits, and segregated fund storage. Our smart contracts are audited by leading security firms, and we maintain comprehensive insurance coverage for staked assets.",
    category: "security",
    icon: Shield,
  },
  {
    id: "referral-program",
    question: "How does the referral program work?",
    answer:
      "Earn 1% rewards on every stake made by users who join through your referral link. Referral rewards are paid instantly when your referrals stake tokens. There's no limit to how many people you can refer, and rewards are paid in the same token as the stake.",
    category: "referrals",
    icon: Users,
  },
  {
    id: "referral-tiers",
    question: "What are referral tiers?",
    answer:
      "Our tier system rewards active referrers with higher rates: Bronze (1%), Silver (1.25%), Gold (1.5%), Platinum (2%), and Diamond (2.5%). Tiers are based on total referrals: 10+ for Silver, 25+ for Gold, 50+ for Platinum, and 100+ for Diamond.",
    category: "referrals",
    icon: Users,
  },
  {
    id: "risks-involved",
    question: "What are the risks involved?",
    answer:
      "MEV bot staking involves several risks including smart contract vulnerabilities, MEV competition reducing profits, Solana network issues, and general cryptocurrency market risks. Past performance doesn't guarantee future results. Only stake what you can afford to lose.",
    category: "security",
    icon: AlertTriangle,
  },
  {
    id: "minimum-stake",
    question: "Is there a minimum staking amount?",
    answer:
      "The minimum stake varies by token: 0.1 SOL, 10 USDC, 10 USDT, or equivalent amounts for meme tokens. These minimums ensure efficient MEV bot operations and reasonable gas cost ratios for all participants.",
    category: "staking",
    icon: DollarSign,
  },
  {
    id: "bot-performance",
    question: "How can I track MEV bot performance?",
    answer:
      "We provide transparent performance metrics including daily returns, total value locked, success rates, and historical performance data. All MEV operations are recorded on-chain for full transparency and verification.",
    category: "general",
    icon: HelpCircle,
  },
]

export function FAQSection() {
  const [openItems, setOpenItems] = useState<string[]>([])
  const [selectedCategory, setSelectedCategory] = useState<string>("all")

  const toggleItem = (id: string) => {
    setOpenItems((prev) => (prev.includes(id) ? prev.filter((item) => item !== id) : [...prev, id]))
  }

  const categories = [
    { id: "all", label: "All Questions", count: faqData.length },
    { id: "general", label: "General", count: faqData.filter((item) => item.category === "general").length },
    { id: "staking", label: "Staking", count: faqData.filter((item) => item.category === "staking").length },
    { id: "rewards", label: "Rewards", count: faqData.filter((item) => item.category === "rewards").length },
    { id: "security", label: "Security", count: faqData.filter((item) => item.category === "security").length },
    { id: "referrals", label: "Referrals", count: faqData.filter((item) => item.category === "referrals").length },
  ]

  const filteredFAQs =
    selectedCategory === "all" ? faqData : faqData.filter((item) => item.category === selectedCategory)

  return (
    <section id="faq" className="py-24 bg-muted/30">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <h2 className="text-3xl lg:text-4xl font-bold mb-4">Frequently Asked Questions</h2>
          <p className="text-xl text-muted-foreground max-w-2xl mx-auto text-balance">
            Everything you need to know about MEV bot staking, rewards, and our platform.
          </p>
        </div>

        <div className="max-w-4xl mx-auto">
          {/* Category Filter */}
          <div className="flex flex-wrap gap-2 mb-8 justify-center">
            {categories.map((category) => (
              <Button
                key={category.id}
                variant={selectedCategory === category.id ? "default" : "outline"}
                size="sm"
                onClick={() => setSelectedCategory(category.id)}
                className="text-sm"
              >
                {category.label} ({category.count})
              </Button>
            ))}
          </div>

          {/* FAQ Items */}
          <div className="space-y-4">
            {filteredFAQs.map((faq) => (
              <Card key={faq.id} className="overflow-hidden">
                <Collapsible open={openItems.includes(faq.id)} onOpenChange={() => toggleItem(faq.id)}>
                  <CollapsibleTrigger asChild>
                    <CardHeader className="cursor-pointer hover:bg-muted/50 transition-colors">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-3">
                          <faq.icon className="h-5 w-5 text-primary" />
                          <CardTitle className="text-left text-lg">{faq.question}</CardTitle>
                        </div>
                        <ChevronDown
                          className={`h-5 w-5 text-muted-foreground transition-transform ${
                            openItems.includes(faq.id) ? "rotate-180" : ""
                          }`}
                        />
                      </div>
                    </CardHeader>
                  </CollapsibleTrigger>
                  <CollapsibleContent>
                    <CardContent className="pt-0">
                      <p className="text-muted-foreground leading-relaxed">{faq.answer}</p>
                    </CardContent>
                  </CollapsibleContent>
                </Collapsible>
              </Card>
            ))}
          </div>
        </div>
      </div>
    </section>
  )
}
